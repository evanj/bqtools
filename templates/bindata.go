// Code generated by go-bindata.
// sources:
// source/index.html
// source/loading.html
// source/project.html
// source/select_project.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x51\x6f\xdc\x36\x0c\x7e\xcf\xaf\xe0\xbc\x87\xb5\x40\xce\x6a\xb3\x76\xc5\x02\xc7\x58\xd7\x06\x5d\x81\x01\x6d\x97\x60\xc1\x9e\x06\x9d\x44\x9f\x95\xc8\xa2\x2b\xd2\x77\xf5\x7e\xfd\x20\xd9\xbe\x5c\x12\xb4\x2b\x86\x01\x7b\xb2\x2d\x8a\x22\xbf\x8f\x1f\x29\x57\xdf\xbc\x7e\xf7\xea\xf2\x8f\xf7\xe7\xd0\x4a\xe7\xeb\xa3\x6a\x79\xa0\xb6\xf5\x51\xe5\x5d\xb8\x81\x88\xfe\xac\x60\x19\x3d\x72\x8b\x28\x05\xb4\x11\x9b\xb3\xa2\x15\xe9\xf9\x54\x29\x63\xc3\x35\x97\xc6\xd3\x60\x1b\xaf\x23\x96\x86\x3a\xa5\xaf\xf5\x27\xe5\xdd\x9a\xd5\x7a\xf0\x9d\x56\x4f\xca\x93\xf2\x7b\x65\x78\xfe\x2e\x3b\x17\x4a\xc3\x5c\xfc\x37\x31\x1a\x0a\xb2\xd2\x3b\x64\xea\x50\x3d\x2b\x5f\x94\x4f\x72\xa8\xc3\xe5\xc3\x88\xe2\xc4\x63\xfd\xb3\xdb\x7c\x18\x30\x8e\x70\x49\xe4\xf9\x14\x5e\x11\x0b\x6c\x1d\x0f\xda\xbb\xbf\xb4\x38\x0a\x95\x9a\x76\x1e\x55\x6a\xe6\x63\x4d\x76\xac\x8f\x2a\x46\x93\xec\x60\xbc\x66\x3e\x2b\x5a\x8c\x04\x8e\x57\x7d\x74\x9d\x8e\x63\x51\x1f\x01\x54\xd6\x6d\x0f\xed\xab\xe4\x9a\x2d\x77\x6d\x86\x82\x68\x17\x30\xce\x36\x80\xaa\x7d\xba\x18\x73\xf8\x74\xf2\xd3\xe2\x5e\xba\x95\x6a\x9f\xde\x3a\x9c\x2c\x0e\x3c\xac\xf7\x3e\xcf\x8a\xfa\x02\x11\x76\xad\x33\x2d\x58\x2d\x9a\x51\xf8\x18\x44\xaf\x3d\x32\xe8\x60\xe1\xe3\x80\xd1\x21\x83\x49\xc8\xa5\x45\xe8\x88\xa5\x52\xed\xc9\x9c\xa6\xb2\x6e\x9b\xb1\x4c\x2f\x95\x9a\x71\xd7\x47\x0f\x28\x98\x3f\x1f\x40\x4f\xf0\x30\x48\xca\xa7\x43\xeb\x86\x0e\xee\x03\xbe\x0f\xb7\xa8\x7f\x9f\x6b\x80\xb0\xc7\x9c\x32\x3c\xc0\x5c\xf5\xd3\xf3\x2e\x27\xc0\x2d\xed\x18\x46\x1a\x60\xd7\x6a\xd9\x63\xce\x58\x17\xd8\x11\x41\xf4\x8d\x0b\x1b\x18\xfa\x3d\x66\xe0\x5e\x1b\x3c\x06\x21\x68\xd1\xf7\xf9\x88\x21\x58\x8c\x2c\xc9\x77\xa4\x21\x4e\x29\x94\x70\x9b\x0f\xe8\xa0\xfd\xc8\x2e\xf1\xd7\xa5\x03\x99\x28\x94\x33\x73\xfd\x57\xf2\x96\xa4\xf1\xef\xf4\x02\xad\xe6\x95\xe0\x27\x59\x19\x0c\x82\x11\xed\xad\x82\xf4\xdc\x3e\x8a\x45\x47\x29\x16\xdf\xf5\x20\x42\xe1\x40\xa9\xe9\xd5\xeb\xb8\xc1\xa2\x7e\x83\x02\x17\x69\x37\xda\x4a\xe9\xff\x57\x00\xbf\xd0\x0e\x9c\xc0\x8e\xe2\xcd\xdd\xa2\xdf\xab\x77\xc4\x8f\x03\xb2\x30\x08\x76\x3d\xc5\x04\x28\xa2\xb6\x2b\x0a\x7e\x04\x6d\x0c\x32\xa7\x92\x2e\x5e\x25\xbc\x15\x18\x18\x39\xd7\x7d\x4f\xd2\x7e\xc6\xa4\xe9\x52\x6e\x88\x36\x7e\x9a\x2f\x6b\xb7\x49\x1d\x32\x2a\x4b\x86\x55\xc4\x06\x23\x06\x83\x2a\x22\x8b\xda\x9e\xa8\x49\x52\x6a\x83\x72\xd8\x9d\x69\x11\x5e\xbe\x7f\x9b\x58\x4c\xd1\x37\x28\xc0\xa2\xc5\xb1\x38\xc3\xd0\x50\x04\xed\xfd\xa2\x47\x17\x72\x32\x7d\xa4\x6b\x34\x92\x85\xc7\xe8\xd1\x08\xda\x12\x6e\xb5\x34\x13\x15\x3f\xc7\xd8\x05\x9a\x21\x3a\x19\xef\xb0\x75\x85\x0b\x43\x53\x0c\x8c\x9d\x63\x76\x14\x18\x76\x08\x46\x87\x53\xf8\xed\x0b\x74\xc1\xa3\x07\x34\x9d\xaa\xa4\x28\x73\x43\x5b\x8c\x8d\xa7\x5d\xa6\x29\x47\x48\xa7\xaa\x93\xe7\x3f\xfe\xf0\xe2\xe4\xd9\x73\x95\xda\x6f\x45\x3d\xc6\x3c\x46\x79\x65\x09\x79\x25\x2d\xae\x16\x4a\x57\xa9\x4e\x29\xee\x8a\x0d\xf5\xb8\xd2\xde\xd3\xae\xa8\x17\x73\xb9\x98\x13\x91\x90\xb7\x24\x3a\x1f\x97\x70\x85\x90\xd7\x17\x60\x15\x76\xf5\xbe\xfa\x95\xc2\xae\x9e\x91\x1c\x03\xd3\x0c\x33\x90\x2c\xf0\x72\x27\x2f\x64\x53\x40\x68\xd3\x82\x6e\x04\x63\xe6\xde\x78\x62\x9c\x76\xad\x23\xed\x18\x23\x3c\x72\xe1\xa1\x56\x2c\x6e\xd1\x27\x80\x7c\x28\x18\x67\x31\x88\x93\x51\xf5\x91\x84\x0c\x79\x56\xef\x5e\x0e\xd2\x9e\x5c\xe1\xfa\x02\xe3\x16\xe3\xb7\xd4\x34\xde\x05\x2c\xea\xc9\x70\x0a\x95\x21\x8b\xf5\x94\xde\x9f\x32\xf6\x78\x46\x21\xed\xa8\x54\x36\xcc\xb0\xef\x0b\x7f\x08\x59\x3a\x2f\xfb\x1e\xce\xc3\xc6\x05\x4c\x68\xdf\xe4\x4c\xa0\xd3\x41\x6f\x90\x81\x67\x4d\xc0\xd0\x5b\x2d\xf3\xc8\x9f\x79\x48\x3d\x18\xc9\x97\x70\xd9\x3a\xce\x83\x32\x73\x45\x3e\x49\x0f\x1c\x03\x0b\x45\xb4\x29\x86\xfe\x8a\x4e\xe1\x8f\x7e\x6a\x92\xa2\x7e\x95\x6c\x70\xf1\xe1\xd7\xac\xff\x74\xf2\x5a\x33\x1e\x54\x23\x4d\xcb\x7e\x10\xcc\x9a\x74\xa1\xa1\xd8\x65\x95\x24\x73\x1a\xe0\x89\xfd\x5c\x67\x8b\x1e\xf3\xb6\x25\x43\x4a\xc9\x58\xed\xfc\x08\x6b\x9d\xe6\xae\x10\xe8\x2d\x39\x0b\x1e\xa7\x91\x7e\x70\x5c\x79\xd0\x37\x7d\xfd\x1a\xb9\x77\xb2\x1f\xfd\xa9\x01\xa9\x99\x3b\x0f\x8d\x1e\xe4\xa0\x2b\x8e\x41\x4f\x0d\x83\xc1\x2e\xbb\xac\x1e\x8f\xb3\x40\xd2\xfd\xb1\x89\x3a\x48\xbe\x41\xfe\x69\xf2\x64\x21\xed\x6b\x37\xeb\x2e\x73\x31\xd2\xf0\x9d\xf7\xd0\xea\x2d\xa6\x8d\x12\x07\x4e\xb3\x29\xd7\x28\x39\x31\x35\xb2\x4b\x3f\x3a\x70\x49\x10\xd1\x0e\x26\x31\xa1\x05\xa2\xe3\x1b\x68\x86\x28\x2d\xc6\xe3\x9c\x5b\xd2\x49\x2a\x19\xf5\x18\x80\x69\x88\x06\x4b\x78\xdb\xec\xd3\xed\x75\xd4\x81\x9c\x9d\x00\xa4\x0a\xc4\x21\x4c\xa9\xd1\x2e\x80\x0b\xe9\x92\x4b\x3e\x57\x53\x7d\xb4\x67\x4a\xb9\xae\xf5\xda\x8f\xd3\x7d\xe8\xa6\xd3\x76\x3a\x48\xca\xf6\x33\xfe\xe7\x9d\x76\xfe\x56\x2d\xe9\x4b\xe8\x14\xaf\x7f\xc2\xad\x0e\xd7\x14\x90\x4b\xa3\x8b\xfa\x7c\xab\x03\x3c\xba\xb7\xfc\x38\xcb\x65\x8e\x13\x10\x6d\x0e\x5c\x7e\xe1\x22\x55\xf3\xbf\x98\xca\x7f\xac\x7f\x07\x00\x00\xff\xff\xfd\xa1\x4a\x73\xc8\x0a\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 2760, mode: os.FileMode(420), modTime: time.Unix(1479597161, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loadingHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x93\x41\x8f\xd3\x3e\x10\xc5\xef\xf9\x14\xb3\x96\xfe\xd2\x9f\x43\xe2\x16\xc4\xa5\x38\x41\xcb\x2e\x17\x24\xd4\x05\xf5\x00\x47\xd7\x99\x36\xee\x3a\x76\x98\x71\xd2\x2d\xab\x7e\x77\xe4\x36\xad\xc2\x2e\xa7\x64\xfc\x92\xf7\x7e\x6f\x94\xa8\x9b\xfb\xe5\xdd\xea\xe7\xc3\x67\x68\x62\xeb\xaa\x4c\x5d\x2e\xa8\xeb\x2a\x53\xce\xfa\x47\x20\x74\xa5\xe0\x78\x70\xc8\x0d\x62\x14\xd0\x10\x6e\x4a\xd1\xc4\xd8\xf1\x42\x4a\x53\xfb\x1d\x17\xc6\x85\xbe\xde\x38\x4d\x58\x98\xd0\x4a\xbd\xd3\x4f\xd2\xd9\x35\xcb\x75\xef\x5a\x2d\x67\xc5\xdb\xe2\x9d\x34\x3c\xce\x45\x6b\x7d\x61\x98\x45\x95\xa9\x68\xa3\xc3\xea\x93\xdd\x7e\xeb\x91\x0e\xb0\x0a\xc1\xf1\x02\xee\x02\x47\x18\x2c\xf7\xda\xd9\xdf\x3a\xda\xe0\x95\x3c\x3f\x99\xa9\x9b\x3c\x87\xd5\xf2\x7e\xb9\x80\xdb\x2f\xb7\x3f\x3e\x42\x9e\x57\x99\x6a\x31\x6a\x48\x4c\x39\xfe\xea\xed\x50\x0a\xc2\x0d\x21\x37\x02\x4c\xf0\x11\x7d\x2c\xc5\xfb\x14\x27\xc7\x6a\xeb\x50\x1f\xaa\x4c\x31\x9a\x64\x0e\xc6\x69\xe6\x52\x34\x48\x01\x2c\xe7\x1d\xd9\x56\xd3\x41\x54\x19\x80\xaa\xed\x30\xd5\xf3\xf4\xea\x49\xf9\x5b\x4b\x39\xda\x7a\xa4\x51\x03\x50\xcd\xfc\x22\x9e\xd8\x93\xf3\x5c\xbc\xe8\xaa\x64\x33\x1f\xcd\x64\x6d\x87\x53\xe2\xf9\x46\xc9\x91\xae\xca\x5e\x81\x8e\xe3\x2b\xc0\xb1\x6c\x4a\x6a\xb1\xb6\x7d\x0b\x2f\xb1\x26\x50\xdc\xaf\x4f\x5c\xa2\xfa\x8e\xba\xb6\x7e\x0b\x1b\x0a\x2d\x5c\xf9\x3a\x87\x9a\x11\xf6\xda\x46\x28\x8a\x62\x42\xda\x51\xd8\x12\x32\x5f\x9c\xae\xb3\xe5\xdc\x69\xda\xe2\x74\x89\x30\x68\xd7\x63\x29\x9e\x9f\x8b\x07\x24\x83\x3e\x1e\x8f\x02\x5a\xfd\x54\x8a\xf9\x6c\x26\xaa\xe9\xf9\x7f\x4a\x5e\xbc\x2e\x51\x49\xff\x8a\xcc\x7a\x8b\xc7\xa3\x92\xdd\xf5\xfc\xff\x55\x63\x53\x22\x98\x9e\x08\x7d\x74\x07\x18\x12\x36\xbb\xb0\x87\x4d\x20\x38\x93\x74\x14\x76\x68\x22\x7f\x80\x3d\x82\x26\x84\x7d\xa0\xc7\x54\x36\x78\xb0\xf1\xcd\xe8\xf8\xaf\x9d\xcb\xf1\x23\x91\xe7\xbf\xe2\x4f\x00\x00\x00\xff\xff\xd0\x3f\x38\xb9\x2d\x03\x00\x00")

func loadingHtmlBytes() ([]byte, error) {
	return bindataRead(
		_loadingHtml,
		"loading.html",
	)
}

func loadingHtml() (*asset, error) {
	bytes, err := loadingHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loading.html", size: 813, mode: os.FileMode(420), modTime: time.Unix(1479590521, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _projectHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x4b\x6f\xe3\xb6\x13\xbf\xfb\x53\xcc\x9f\xc8\x02\xff\x1e\x2c\x3a\x69\x81\x02\x8e\xac\x02\xbb\x6e\xd1\x00\x7d\xa4\x68\x2e\x3d\x8e\xa5\x91\xc4\x94\x22\x5d\x92\x4e\x62\x08\xfa\xee\x05\x29\xc9\x91\x14\x39\x4d\x80\xed\x69\x7b\x92\x87\xf3\x7e\xfd\x48\xd7\x75\x46\xb9\x50\x04\x6c\x2b\xec\x5e\xe2\xf1\xd6\xe8\x7b\x4a\x1d\x6b\x9a\xba\x8e\x7e\x30\x82\x54\x26\x8f\xbf\x60\x45\xfe\x40\xe4\xa0\x08\xa2\x9b\x2d\x4c\x58\xf0\xff\xba\x8e\x6e\xb6\x4d\xf3\x55\x5d\x93\xca\xbc\x6c\xf8\x2c\xe2\xff\x6d\x7f\xfd\x74\xf7\xc7\xed\xf7\x50\xba\x4a\x26\x8b\xb8\xff\x10\x66\xc9\x22\x96\x42\xfd\x09\x86\xe4\x86\x59\x77\x94\x64\x4b\x22\xc7\xa0\x34\x94\x6f\x58\xe9\xdc\xde\xae\x39\x4f\x33\x75\x6f\xa3\x54\xea\x43\x96\x4b\x34\x14\xa5\xba\xe2\x78\x8f\x4f\x5c\x8a\x9d\xe5\xbb\x83\xac\x90\xaf\xa2\xab\xe8\x6b\x9e\xda\x8e\x8e\x2a\xa1\xa2\xd4\x5a\xf6\x79\x7c\xe4\x5a\xb9\x25\x3e\x92\xd5\x15\xf1\x6f\xa2\x6f\xa3\x55\x70\x35\x3c\x1e\x7a\x74\xc2\x49\x4a\x3e\x8a\xe2\xb7\x03\x99\x23\xdc\x69\x2d\xed\x1a\xea\xda\x51\xb5\x97\xe8\x5e\x16\x1b\xa2\xa6\x89\x79\xab\xb6\x88\x79\x57\x9c\x9d\xce\x8e\xc9\x22\xb6\x94\x3a\xa1\x15\xa4\x12\xad\xdd\xb0\x92\x8c\x06\x61\x97\x7b\x23\x2a\x34\x47\x96\x2c\x00\xe2\x4c\x3c\x0c\xf9\x4b\xaf\x1a\x38\x63\x5e\xaa\x95\x43\xa1\xc8\x74\x3c\x80\xb8\xbc\xec\x99\xc1\xbd\xb7\x7c\xc9\xde\x1f\x7b\x79\xd9\x79\xe3\x99\x78\x08\x21\xb5\x3f\x62\xde\x85\x9f\x2c\x5e\x64\xd2\x91\x2c\x39\x1f\xe2\x98\x23\x0f\x95\xb2\xb3\x69\x79\x8e\x0f\x5d\xa1\x31\xfa\x11\xbc\x11\x52\x6e\x98\x65\x72\xa7\x1d\x4a\x0b\xb9\x36\x6f\xcb\xa6\x57\x75\xb8\x93\x74\xaa\x91\x27\x18\x84\x41\xda\xb0\x47\x91\xb9\x72\x0d\x78\x70\xfa\xfa\xe4\xcb\xab\x98\x67\xc2\x93\xe5\x44\xe1\x72\xb5\xda\x3f\x5d\xb3\xe4\xe3\xd1\x91\x8d\xb9\x2b\xc7\xe2\x59\x52\xd7\xd1\x8f\x87\x0a\x55\x10\x08\xa3\x91\x0d\xcc\xf3\xa1\xfd\x37\x3b\xfb\xa4\xad\x9b\xf3\x75\x51\xd7\x7b\x23\x94\xcb\x81\x7d\x88\xae\x72\x06\x51\xa8\x94\x17\x6f\x1a\x5e\x69\xe5\xca\xf3\xfe\x63\x1e\x2a\x32\xdf\xfb\xf7\xf6\xaf\xeb\xda\x73\x1f\x47\xfd\xfb\x09\x4d\x41\xd6\xc1\x16\x1d\x5a\x72\xf6\x1f\xbb\x34\xac\x51\xbb\x51\xc3\xc4\x47\x55\x0b\x22\xc9\xb4\x3a\xaf\x9c\xf6\x35\x76\xf4\xe4\x96\x28\x45\xa1\xd6\x60\x44\x51\xba\x6b\x96\x5c\xf0\x9f\xbb\xa2\xbd\x4f\x6f\x76\x1a\xda\x18\xba\x9c\xe1\x66\xfb\xa2\x83\xe3\x61\xe0\x5d\xa6\x83\xd4\x5b\x14\x79\xd6\xa8\xeb\x8b\x7d\x3b\xec\x37\x5b\x58\x6f\x20\xc0\xf6\x98\xef\xfc\x00\x84\x70\x82\xc0\xdd\x89\x9c\x08\x1a\x54\x05\x41\xd4\x45\xf7\xbb\xd3\x06\x0b\x1a\xc9\xcc\xd4\x39\xeb\x6b\xf0\x40\xc6\x89\x14\x65\x5f\x87\x4a\x64\x99\xa4\x6b\x98\xcc\xed\x48\x1d\x20\xde\x1b\x5d\x18\xb2\xb6\x6f\xf6\x89\x16\x76\x69\x2b\x94\x92\xc1\x03\xca\x03\x6d\x58\x5d\x47\xb7\x64\x52\x3f\x52\x83\x94\x9a\x86\x41\x85\x4f\x1b\x76\xb9\x5a\x4d\x37\xb9\xf7\x79\x4e\x33\xe6\xbd\xb7\x49\x56\xa3\x05\x99\xe4\xd9\xd9\xbe\xf2\xa6\x61\xae\xf1\xe7\xbc\x7d\x78\xd5\xec\xec\xe8\xbd\xd8\xe5\xad\x96\x12\x8d\xbd\x25\x13\x86\x72\x8a\x25\x6f\xb0\xf9\x2a\x16\x75\xfa\x49\x2c\xfa\x76\xe4\x08\x39\x2e\x33\x74\xb8\x43\x4b\x2c\x89\xb9\x48\x20\xc6\xc9\x7d\xbb\x13\xc5\x5f\xfe\x7e\x69\xaf\xdc\xa8\xd0\xba\x90\xed\xa5\x9b\xb5\xc3\xc4\x87\x63\xda\x34\xeb\xee\x79\x11\xc2\xf1\x3f\x62\x8e\xc9\x34\x94\xf1\x2e\xf8\x01\x6d\xdf\x20\x03\xfe\x70\x19\x4e\xd8\xb5\x98\x41\x99\x3b\xcf\xfa\xa2\x30\x26\x64\xfc\x99\x10\xa6\x03\x86\x60\xf2\x3f\x58\x98\xcf\xf3\x4b\x84\x85\x6e\x69\xde\x8b\x09\x41\xed\x0c\x22\x7c\xe7\x70\xb7\xc9\xc8\xa1\x90\xf6\x5f\x41\x07\x98\x7d\xd5\xfa\xcf\xe8\x6d\xcb\xbb\xd7\x3a\x0f\x7f\x70\xfe\x0e\x00\x00\xff\xff\xfe\xe6\x2a\xe7\x57\x0d\x00\x00")

func projectHtmlBytes() ([]byte, error) {
	return bindataRead(
		_projectHtml,
		"project.html",
	)
}

func projectHtml() (*asset, error) {
	bytes, err := projectHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "project.html", size: 3415, mode: os.FileMode(420), modTime: time.Unix(1479590702, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _select_projectHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x53\xb1\x8e\xd4\x30\x10\xed\xf3\x15\x43\x2a\x28\x62\xdf\x01\x12\xd2\xc9\x97\x02\x0e\xa4\x6b\xe0\x10\xd7\x50\x4e\xec\xc9\xc6\x7b\x8e\x1d\x6c\xef\x42\x64\xe5\xdf\x91\xb3\xd9\x25\x7b\x4b\x41\x41\xe5\xd8\x6f\xe6\xbd\xe7\x17\x4f\x4a\x8a\x5a\x6d\x09\xca\x3b\x1d\x06\x83\xe3\x83\x77\x5b\x92\xb1\x9c\xa6\x94\xd8\x27\xaf\xc9\x2a\x33\x7e\xc6\x9e\xf2\x81\x6e\xc1\x12\xb0\x7b\x05\xcf\x20\x78\x99\x12\xbb\x57\xd3\xf4\x2a\x25\xb2\x2a\xd7\xce\x4b\x21\x5e\xdc\x7d\xf9\xf0\xf8\xfd\xe1\x23\x74\xb1\x37\x75\x21\x8e\x0b\xa1\xaa\x0b\x61\xb4\x7d\x02\x4f\xe6\xb6\x0c\x71\x34\x14\x3a\xa2\x58\x42\xe7\xa9\xbd\x2d\xbb\x18\x87\x70\xc3\xb9\x54\x76\x1b\x98\x34\x6e\xa7\x5a\x83\x9e\x98\x74\x3d\xc7\x2d\xfe\xe2\x46\x37\x81\x37\x3b\xd3\x23\xbf\x62\xaf\xd9\x1b\x2e\xc3\xb2\x67\xbd\xb6\x4c\x86\x50\xfe\x1f\x8d\xd6\xd9\x58\xe1\x4f\x0a\xae\x27\xfe\x96\xbd\x63\x57\xb3\xd4\xfa\x78\xad\x18\x75\x34\x54\xbf\xd7\x9b\xaf\x3b\xf2\x23\x3c\x3a\x67\xc2\x0d\x7c\x23\x43\x32\x02\xc2\x70\x88\x58\xf0\x43\x5d\x21\xf8\x92\x46\xe3\xd4\x58\x17\x22\x90\x8c\xda\x59\x90\x06\x43\xb8\x2d\x3b\xf2\x0e\x74\xa8\x06\xaf\x7b\xf4\x63\x59\x17\x00\x42\xe9\xfd\x1a\xaf\x72\xeb\x8c\x9c\x63\xd2\xd9\x88\xda\x92\x5f\x30\x00\xd1\x5d\x1f\xc1\x59\x3e\x33\x5f\x97\xcf\xcc\x0a\xde\x5d\x2f\x64\x5c\xe9\xfd\xac\x78\xf8\x10\x7c\x71\x57\x17\x17\x46\x97\xed\x85\x41\xe9\xcc\xae\xb7\x21\x2b\xf5\xae\xd1\x86\xfe\x6a\x34\xd7\xe4\x92\x0e\x4d\x9b\x57\xd7\xb6\x81\x62\xe5\x2c\x55\x3f\x76\xe8\xe3\xfa\x0e\x16\x4f\x8d\x03\x5a\x32\x27\x04\x40\x0c\x67\x48\x95\xa3\xd5\x76\x53\xd6\x97\xf1\x0f\x75\x71\x6a\x4b\xc9\xa3\xdd\x10\xb0\xe5\xfd\x87\x69\xfa\x43\x89\xe7\x94\x8d\x71\xf2\x29\x5b\x44\x19\xf5\x9e\x8e\x6f\x89\x2f\xc4\x81\x2f\xb3\xb0\x72\x05\x20\xc2\x80\xf6\x9c\x47\xcb\x1c\x96\xd0\xc7\xd3\x16\xa1\xc5\x4a\x61\xc4\x06\x03\x95\xb5\xe0\xba\x16\x3c\xf7\xad\x89\x52\x8a\xd4\x0f\x06\xe3\xe5\xcc\x02\x5b\xbb\xe6\x58\xaf\xae\x77\x18\xc7\x63\x80\xdc\xe2\xfe\x1f\x7e\x30\x5f\x5e\x24\x9f\xa7\xf6\x77\x00\x00\x00\xff\xff\xc5\x3b\xcc\xed\x2c\x04\x00\x00")

func select_projectHtmlBytes() ([]byte, error) {
	return bindataRead(
		_select_projectHtml,
		"select_project.html",
	)
}

func select_projectHtml() (*asset, error) {
	bytes, err := select_projectHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "select_project.html", size: 1068, mode: os.FileMode(420), modTime: time.Unix(1479576707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"loading.html": loadingHtml,
	"project.html": projectHtml,
	"select_project.html": select_projectHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"loading.html": &bintree{loadingHtml, map[string]*bintree{}},
	"project.html": &bintree{projectHtml, map[string]*bintree{}},
	"select_project.html": &bintree{select_projectHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

